ls()
devtools:::test
install_github("baddalay/spatstat")
library(devtools)
install_github("baddalay/spatstat")
install_github("baddstats/spatstat")
install_github("spatstat/spatstat.utils", ref = "master")
install_github("spatstat/spatstat.data", ref = "master")
install_github("spatstat/spatstat.sparse", ref = "master")
install_github("spatstat/spatstat.geom", ref = "main")
install_github("spatstat/spatstat.core", ref = "master")
install_github("spatstat/baddstats.linnet", ref = "master")
install_github("spatstat/baddstats/spatstat", ref = "main")
install_github("baddstats/spatstat", ref = "main")
library(intamapInterctive)
library(intamapInteractive)
ssaOptim
intamapInteractive::ssaOptim
update.packages()
update.packages()
library(spatstat)
?nndist
library(DBI)
loadNamespace(spcosa)
library(spcosa)
sessionInfo()
install.packages("DBI")
install.packages("spcosa")
library(intamapInteractive)
sessionInfo()
??spcosa
?spsample
mm = sessionInfo()
mm
names(mm)
mm$loadedOnly
names(mm$loadedOnly)
which(names(mm$loadedOnly) == "spcosa")
sessionInfo()
library(intamapInteractive)
library(intamapInteractive)
sessionInfo()
library(intamapInteractive)
mm = sessionInfo()
which(names(mm$loadedOnly) == "spcosa")
spsample
??`spsample-methods`
library(spcosa)
?`spsample,CompactStratification,missing,missing-method`
debug(ssaOptim)
?ssaOptim
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
0
library(gstat)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
class(candidates)
stratify
showMethods("stratify", inc = TRUE)
sessionInfo()
library(intamapInteractive)
sessionInfo()
library(spcosa)
sessionInfo()
which(names(sessionInfo()$loaded))
names(sessionInfo())
library(DBI)
install.packages("RSQLite")
f = function(x) 0.4*x^2 + 2*x-5.6
g = function(x) -0.3*x^2 +3.4*x-3.5
nns = seq(-10,10,0.1)
plot(nns, f(nns), t = "l")
lines(nns, g(nns))
nns = seq(-1,3,0.1)
f = function(x) 0.4*x^2 + 2*x-5.6
g = function(x) -0.3*x^2 +3.4*x-3.5
plot(nns, f(nns), t = "l")
lines(nns, g(nns))
nns = seq(-1.5,3.5,0.1)
f = function(x) 0.4*x^2 + 2*x-5.6
plot(nns, f(nns), t = "l")
lines(nns, g(nns))
.4-2-5.6
library(ssaOptim)
library(intamapInteractive)
?ssaOptim
# load data:
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
library(gstat)
# load data:
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
library(intamapInteractive)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200, returnLast = TRUE
)
?t.test
??psri
sys.info()
Sys.info()
library(gstat)
?krige
library(sp)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
gridded(meuse.grid) = ~x+y
m <- vgm(.59, "Sph", 874, .04)
# ordinary kriging:
x <- krige(log(zinc)~1, meuse, meuse.grid, model = m)
library(sp)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
gridded(meuse.grid) = ~x+y
m <- vgm(.59, "Sph", 874, .04)
# ordinary kriging:
x <- krige(log(zinc)~1, meuse, meuse.grid, model = m, debug.level = 0)
library(intamapInteractive)
?ssaMap
library(intamapInteractive)
?optimzeNetwork
library(intamapInteractive)
?optimzeNetwork
??optimizeNetwork
library(intamapInteractive)
calculateMukv
?calculateMukv
setwd("C:\\Users\\user\\Downloads\\Data for Spatial Simulated Annealing\\Data for Spatial Simulated Annealing")
library("readxl")
library("sf")
library("raster")
library("sp")
library("plyr")
library("gstat")
library("intamap")
library("intamapInteractive")
library(nlme)
estaciones<-st_read("estaciones_SA.shp")
estaciones<-as(estaciones,"Spatial")
rasters<-list.files(".",".tif$")
aux_info<-stack(rasters)
aux_info[is.na(aux_info)]<-0
aux_info <- rasterToPoints(aux_info, spatial = TRUE)
aux_info@data[,c("X","Y")]<-coordinates(aux_info)
gridded(aux_info)<-TRUE
limite_espana<-st_read("Boundary_spain.shp")
limite_espana<-as(limite_espana,"Spatial")
Model<-gls(temp_year~Y+elev,data=estaciones@data,corr=corExp(form=~X+Y,nugget=TRUE))
vfitUK = fit.variogram(variogram(temp_year~Y+elev,estaciones), vgm(6.730294e-01 ,model="Exp",range=4.180220e+05))
dim(estaciones)
dim(aux_info)
dim(limite_espana)
library(gstat)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
dim(predGrid)
optimUK <- ssaOptim(estaciones, aux_info, candidates = limite_espana,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
library(gstat)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
setwd("C:\\Users\\user\\Downloads\\Data for Spatial Simulated Annealing\\Data for Spatial Simulated Annealing")
library("readxl")
library("sf")
library("raster")
library("sp")
library("plyr")
library("gstat")
library("intamap")
library("intamapInteractive")
library(nlme)
estaciones<-st_read("estaciones_SA.shp")
estaciones<-as(estaciones,"Spatial")
rasters<-list.files(".",".tif$")
aux_info<-stack(rasters)
aux_info = aggregate(aux_info, fact = 30)
aux_info <- rasterToPoints(aux_info, spatial = TRUE)
aux_info@data[,c("X","Y")]<-coordinates(aux_info)
aux_info[is.na(aux_info$aspect)]<-0
gridded(aux_info)<-TRUE
limite_espana<-st_read("Boundary_spain.shp")
limite_espana<-as(limite_espana,"Spatial")
Model<-gls(temp_year~Y+elev,data=estaciones@data,corr=corExp(form=~X+Y,nugget=TRUE))
vfitUK = fit.variogram(variogram(temp_year~Y+elev,estaciones), vgm(6.730294e-01 ,model="Exp",range=4.180220e+05))
optimUK <- ssaOptim(estaciones, aux_info, candidates = limite_espana,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
dim(aux_info)
names(limite_espana)
limite_espana
limite_espana@data
lesp = rgeos::gSimplify(limite_espana)
lesp = rgeos::gSimplify(limite_espana, tol = 0.05)
plot(lesp)
lesp = rgeos::gSimplify(limite_espana, tol = 10)
plot(lesp)
lesp = rgeos::gSimplify(limite_espana, tol = 1000)
plot(lesp)
lesp = rgeos::gSimplify(limite_espana, tol = 10000)
plot(lesp)
lesp<-as(lesp,"Spatial")
Model<-gls(temp_year~Y+elev,data=estaciones@data,corr=corExp(form=~X+Y,nugget=TRUE))
vfitUK = fit.variogram(variogram(temp_year~Y+elev,estaciones), vgm(6.730294e-01 ,model="Exp",range=4.180220e+05))
optimUK <- ssaOptim(estaciones, aux_info, candidates = lesp,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
optimUK <- ssaOptim(estaciones, aux_info, candidates = lesp,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
options(error = recover)
optimUK <- ssaOptim(estaciones, aux_info, candidates = lesp,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
library("readxl")
library("sf")
library("raster")
library("sp")
library("plyr")
library("gstat")
library("intamap")
library("intamapInteractive")
library(nlme)
optimUK <- ssaOptim(estaciones, aux_info, candidates = lesp,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
options(error = recover)
optimUK <- ssaOptim(estaciones, aux_info, candidates = lesp,covariates = "over",nDiff = 10, action = "add", model = vfitUK,
nr_iterations = 10000,formulaString = temp_year~Y+elev,nmax = 40, countMax = 200)
