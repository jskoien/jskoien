ls()
devtools:::test
install_github("baddalay/spatstat")
library(devtools)
install_github("baddalay/spatstat")
install_github("baddstats/spatstat")
install_github("spatstat/spatstat.utils", ref = "master")
install_github("spatstat/spatstat.data", ref = "master")
install_github("spatstat/spatstat.sparse", ref = "master")
install_github("spatstat/spatstat.geom", ref = "main")
install_github("spatstat/spatstat.core", ref = "master")
install_github("spatstat/baddstats.linnet", ref = "master")
install_github("spatstat/baddstats/spatstat", ref = "main")
install_github("baddstats/spatstat", ref = "main")
library(intamapInterctive)
library(intamapInteractive)
ssaOptim
intamapInteractive::ssaOptim
update.packages()
update.packages()
library(spatstat)
?nndist
library(DBI)
loadNamespace(spcosa)
library(spcosa)
sessionInfo()
install.packages("DBI")
install.packages("spcosa")
library(intamapInteractive)
sessionInfo()
??spcosa
?spsample
mm = sessionInfo()
mm
names(mm)
mm$loadedOnly
names(mm$loadedOnly)
which(names(mm$loadedOnly) == "spcosa")
sessionInfo()
library(intamapInteractive)
library(intamapInteractive)
sessionInfo()
library(intamapInteractive)
mm = sessionInfo()
which(names(mm$loadedOnly) == "spcosa")
spsample
??`spsample-methods`
library(spcosa)
?`spsample,CompactStratification,missing,missing-method`
debug(ssaOptim)
?ssaOptim
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
0
library(gstat)
data(meuse)
coordinates(meuse) = ~x+y
data(meuse.grid)
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
predGrid = meuse.grid
# estimate variograms (OK/UK):
vfitOK = fit.variogram(variogram(zinc~1, meuse), vgm(1, "Exp", 300, 1))
vfitUK = fit.variogram(variogram(zinc~x+y, meuse), vgm(1, "Exp", 300, 1))
vfitRK = fit.variogram(variogram(zinc~dist+ffreq+soil, meuse), vgm(1, "Exp", 300, 1))
# study area of interest:
bb = bbox(predGrid)
boun = SpatialPoints(data.frame(x=c(bb[1,1],bb[1,2],bb[1,2],bb[1,1],bb[1,1]),
y=c(bb[2,1],bb[2,1],bb[2,2],bb[2,2],bb[2,1])))
Srl = Polygons(list(Polygon(boun)),ID = as.character(1))
candidates = SpatialPolygonsDataFrame(SpatialPolygons(list(Srl)),
data = data.frame(ID=1))
# add 20 more points assuming OK model (SSA method):
optimOK <- ssaOptim(meuse, meuse.grid, candidates = candidates, covariates = "over",
nDiff = 20, action = "add", model = vfitOK, nr_iterations = 10000,
formulaString = zinc~1, nmax = 40, countMax = 200)
class(candidates)
stratify
showMethods("stratify", inc = TRUE)
sessionInfo()
library(intamapInteractive)
sessionInfo()
library(spcosa)
sessionInfo()
which(names(sessionInfo()$loaded))
names(sessionInfo())
library(DBI)
install.packages("RSQLite")
f = function(x) 0.4*x^2 + 2*x-5.6
g = function(x) -0.3*x^2 +3.4*x-3.5
nns = seq(-10,10,0.1)
plot(nns, f(nns), t = "l")
lines(nns, g(nns))
nns = seq(-1,3,0.1)
f = function(x) 0.4*x^2 + 2*x-5.6
g = function(x) -0.3*x^2 +3.4*x-3.5
plot(nns, f(nns), t = "l")
lines(nns, g(nns))
nns = seq(-1.5,3.5,0.1)
f = function(x) 0.4*x^2 + 2*x-5.6
plot(nns, f(nns), t = "l")
lines(nns, g(nns))
.4-2-5.6
